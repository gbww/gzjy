<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gzjy.receive.mapper.ReceiveSampleItemMapper" >
  <resultMap id="BaseResultMap" type="com.gzjy.receive.model.ReceiveSampleItem" >
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="receive_sample_id" property="receiveSampleId" jdbcType="VARCHAR" />
    <result column="report_id" property="reportId" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="method" property="method" jdbcType="VARCHAR" />
    <result column="unit" property="unit" jdbcType="VARCHAR" />
    <result column="standard_value" property="standardValue" jdbcType="VARCHAR" />
    <result column="detection_limit" property="detectionLimit" jdbcType="VARCHAR" />
    <result column="quantitation_limit" property="quantitationLimit" jdbcType="VARCHAR" />
    <result column="device" property="device" jdbcType="VARCHAR" />
    <result column="default_price" property="defaultPrice" jdbcType="DOUBLE" />
    <result column="test_room" property="testRoom" jdbcType="VARCHAR" />
    <result column="subpackage" property="subpackage" jdbcType="VARCHAR" />
    <result column="item_result" property="itemResult" jdbcType="VARCHAR" />
    <result column="measured_value" property="measuredValue" jdbcType="VARCHAR" />
    <result column="test_user" property="testUser" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  
  
  <resultMap id="ReceiveSampleResultMap" type="com.gzjy.receive.model.ReceiveSample">
			<id column="receive_sample_id" property="receiveSampleId" jdbcType="CHAR" />
		<result column="report_id" property="reportId" jdbcType="CHAR" />
		<result column="sample_type" property="sampleType" jdbcType="VARCHAR" />
		<result column="check_type" property="checkType" jdbcType="VARCHAR" />
		<result column="entrusted_unit" property="entrustedUnit"
			jdbcType="VARCHAR" />
		<result column="entrusted_unit_address" property="entrustedUnitAddress"
			jdbcType="VARCHAR" />
		<result column="entrusted_user_phone" property="entrustedUserPhone"
			jdbcType="VARCHAR" />
		<result column="entrusted_user_email" property="entrustedUserEmail"
			jdbcType="VARCHAR" />
		<result column="inspected_unit" property="inspectedUnit"
			jdbcType="VARCHAR" />
		<result column="inspected_unit_address" property="inspectedUnitAddress"
			jdbcType="VARCHAR" />
		<result column="inspected_user" property="inspectedUser"
			jdbcType="VARCHAR" />
		<result column="inspected_user_phone" property="inspectedUserPhone"
			jdbcType="VARCHAR" />
		<result column="inspected_user_email" property="inspectedUserEmail"
			jdbcType="VARCHAR" />
		<result column="sample_address" property="sampleAddress"
			jdbcType="VARCHAR" />
		<result column="sample_name" property="sampleName" jdbcType="VARCHAR" />
		<result column="sample_link" property="sampleLink" jdbcType="VARCHAR" />
		<result column="sample_trademark" property="sampleTrademark"
			jdbcType="VARCHAR" />
		<result column="sample_circulate" property="sampleCirculate"
			jdbcType="VARCHAR" />
		<result column="sample_circulate_date" property="sampleCirculateDate"
			jdbcType="TIMESTAMP" />
		<result column="sample_date" property="sampleDate" jdbcType="TIMESTAMP" />
		<result column="sample_way" property="sampleWay" jdbcType="VARCHAR" />
		<result column="specification_model" property="specificationModel"
			jdbcType="VARCHAR" />
		<result column="execute_standard" property="executeStandard"
			jdbcType="VARCHAR" />
		<result column="sample_names" property="sampleNames" jdbcType="VARCHAR" />
		<result column="processing_technology" property="processingTechnology"
			jdbcType="VARCHAR" />
		<result column="closed_status" property="closedStatus"
			jdbcType="VARCHAR" />
		<result column="sample_number" property="sampleNumber"
			jdbcType="VARCHAR" />
		<result column="sample_status" property="sampleStatus"
			jdbcType="VARCHAR" />
		<result column="sample_basenumber" property="sampleBasenumber"
			jdbcType="VARCHAR" />
		<result column="save_way" property="saveWay" jdbcType="VARCHAR" />
		<result column="production_unit" property="productionUnit"
			jdbcType="VARCHAR" />
		<result column="production_address" property="productionAddress"
			jdbcType="VARCHAR" />
		<result column="production_user" property="productionUser"
			jdbcType="VARCHAR" />
		<result column="production_phone" property="productionPhone"
			jdbcType="VARCHAR" />
		<result column="cost" property="cost" jdbcType="VARCHAR" />
		<result column="remarks" property="remarks" jdbcType="VARCHAR" />
		<result column="data_remarks" property="dataRemarks" jdbcType="VARCHAR" />
		<result column="responsible_person" property="responsiblePerson"
			jdbcType="VARCHAR" />
		<result column="sample_holder" property="sampleHolder"
			jdbcType="VARCHAR" />
		<result column="receive_user" property="receiveUser" jdbcType="VARCHAR" />
		<result column="receive_date" property="receiveDate" jdbcType="TIMESTAMP" />
		<result column="arrange_finish_date" property="arrangeFinishDate"
			jdbcType="TIMESTAMP" />
		<result column="finish_date" property="finishDate" jdbcType="TIMESTAMP" />
		<result column="protocol_id" property="protocolId" jdbcType="VARCHAR" />
		<result column="subpackage" property="subpackage" jdbcType="VARCHAR" />
		<result column="result" property="result" jdbcType="VARCHAR" />
		<result column="determine" property="determine" jdbcType="VARCHAR" />
		<result column="approval_user" property="approvalUser"
			jdbcType="VARCHAR" />
		<result column="examine_user" property="examineUser" jdbcType="VARCHAR" />
		<result column="draw_user" property="drawUser" jdbcType="VARCHAR" />
		<result column="principal_inspector" property="principalInspector"
			jdbcType="VARCHAR" />
		<result column="rs_status" property="status" jdbcType="INTEGER" />
		<result column="report_status" property="reportStatus"
			jdbcType="INTEGER" />
		<result column="created_at" property="createdAt" jdbcType="TIMESTAMP" />
	</resultMap>
	
  
  
  
  
  <resultMap id="CountItemResultByTestRoom" type="com.gzjy.receive.model.SampleItemCountView" >
    <result column="item_count" property="itemCount" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="test_room" property="testRoom" jdbcType="VARCHAR" />
    <result column="updated_at" property="updatedAt" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <resultMap id="DetailResultMap" type="com.gzjy.receive.model.ReceiveSampleItem"
		extends="BaseResultMap">
		<association property="sample"  resultMap="ReceiveSampleResultMap"></association>
	</resultMap>
  
  <sql id="Base_Column_List" >
    id, receive_sample_id, report_id, name, method, unit, standard_value, detection_limit, 
    quantitation_limit, device, default_price, test_room, subpackage, item_result, measured_value, 
    test_user, status, updated_at
  </sql>
  
  <sql id="Detail_Column_List" >
    a.id, a.receive_sample_id, a.report_id, a.name, a.method, a.unit, a.standard_value, a.detection_limit, 
    a.quantitation_limit, a.device, a.default_price, a.test_room, a.subpackage, a.item_result, a.measured_value, 
    a.test_user, a.status, a.updated_at,
    b.receive_sample_id, b.report_id, b.sample_type, b.check_type, b.entrusted_unit,
		b.entrusted_unit_address,
		b.entrusted_user_phone, b.entrusted_user_email, b.inspected_unit, b.inspected_unit_address,
		b.inspected_user, b.inspected_user_phone, b.inspected_user_email,
		b.sample_address, b.sample_name,
		b.sample_link, b.sample_trademark, b.sample_circulate, b.sample_circulate_date,
		b.sample_date,
		b.sample_way, b.specification_model, b.execute_standard, b.sample_names,
		b.processing_technology,
		b.closed_status, b.sample_number, b.sample_status, b.sample_basenumber, b.save_way,
		b.production_unit,
		b.production_address, b.production_user, b.production_phone, b.cost, b.remarks, b.data_remarks,
		b.responsible_person, b.sample_holder, b.receive_user, b.receive_date,
		b.arrange_finish_date,
		b.finish_date, b.protocol_id, b.subpackage, b.result, b.determine, b.approval_user,
		b.examine_user,
		b.draw_user, b.principal_inspector, b.status rs_status, b.report_status, b.created_at
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from receive_sample_item
    where id = #{id,jdbcType=CHAR}
  </select>
  
  
  <select id="selectTestDetail" resultMap="DetailResultMap"  >
    select 
    <include refid="Detail_Column_List" />
    from receive_sample_item a left join receive_sample b on a.receive_sample_id=b.receive_sample_id
          <where>
    	<foreach collection="filters.keys" item="key" separator="and">
    	<choose>
    	<when test="key=='status'">
    	 a.status LIKE CONCAT('%',#{filters[${key}]},'%' )
    	</when>
    	<when test="key=='receive_sample_id'">
    	 a.receive_sample_id LIKE CONCAT('%',#{filters[${key}]},'%' )
    	</when>
        <otherwise>
        <if test="null!=filters[key]">
         ${key} LIKE CONCAT('%',#{filters[${key}]},'%' )
        </if>
        </otherwise>    	
    	</choose>    			
		</foreach>	
    </where>
    order by ${orderby}
  </select>
  
  
  
  
  
  <!--  查询授予当前用户的检验项列表 -->
   <select id="selectByUser" resultMap="BaseResultMap" >
    select 
    <include refid="Detail_Column_List" />
    from receive_sample_item a left join receive_sample b on a.receive_sample_id=b.receive_sample_id
          <where>
        	<foreach collection="filters.keys" item="key" separator="and">
    	<choose>
    	<when test="key=='status'">
    	 a.status LIKE CONCAT('%',#{filters[${key}]},'%' )
    	</when>
    	<when test="key=='receive_sample_id'">
    	 a.receive_sample_id LIKE CONCAT('%',#{filters[${key}]},'%' )
    	</when>
        <otherwise>
        <if test="null!=filters[key]">
         ${key} LIKE CONCAT('%',#{filters[${key}]},'%' )
        </if>
        </otherwise>    	
    	</choose>    			
		</foreach>
    </where>
    order by ${orderby}
  </select>
  <!--  根据接样ID查询检验项列表 -->
   <select id="selectByReceiveSampleId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from receive_sample_item
    where receive_sample_id = #{receiveSampleId,jdbcType=CHAR}
  </select>
  
  
  	<select id="selectCountGroupByDepartment" resultMap="CountItemResultByTestRoom">
		select
		count(receive_sample_id) item_count,test_room,status,updated_at
		from receive_sample_item
		<where>
			<foreach collection="filters.keys" item="key" separator="and">
				<if test="null!=filters[key]">
					${key} LIKE CONCAT('%',#{filters[${key}]},'%' )
				</if>
			</foreach>
			<if test="timeStart != null">
				and updated_at &gt;= #{timeStart,jdbcType=TIMESTAMP}
			</if>
			<if test="timeEnd != null">
				and updated_at &lt;= #{timeEnd,jdbcType=TIMESTAMP}
			</if>
		</where>
		GROUP BY test_room ,status  
		order by ${orderby}
	</select>
  
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from receive_sample_item
    where id = #{id,jdbcType=CHAR}
  </delete>
   <!--根据接收样品的id删除 -->
    <delete id="deleteByReceiveSampleId" parameterType="java.lang.String" >
    delete from receive_sample_item
    where receive_sample_id = #{id,jdbcType=CHAR}
  </delete>
 
  <insert id="insert" parameterType="com.gzjy.receive.model.ReceiveSampleItem" >
    insert into receive_sample_item (id, receive_sample_id, report_id, 
      name, method, unit, 
      standard_value, detection_limit, quantitation_limit, 
      device, default_price, test_room, 
      subpackage, item_result, measured_value, 
      test_user, status, updated_at
      )
    values (#{id,jdbcType=CHAR}, #{receiveSampleId,jdbcType=VARCHAR}, #{reportId,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{method,jdbcType=VARCHAR}, #{unit,jdbcType=VARCHAR}, 
      #{standardValue,jdbcType=VARCHAR}, #{detectionLimit,jdbcType=VARCHAR}, #{quantitationLimit,jdbcType=VARCHAR}, 
      #{device,jdbcType=VARCHAR}, #{defaultPrice,jdbcType=DOUBLE}, #{testRoom,jdbcType=VARCHAR}, 
      #{subpackage,jdbcType=VARCHAR}, #{itemResult,jdbcType=VARCHAR}, #{measuredValue,jdbcType=VARCHAR}, 
      #{testUser,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.gzjy.receive.model.ReceiveSampleItem" >
    insert into receive_sample_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="receiveSampleId != null" >
        receive_sample_id,
      </if>
      <if test="reportId != null" >
        report_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="method != null" >
        method,
      </if>
      <if test="unit != null" >
        unit,
      </if>
      <if test="standardValue != null" >
        standard_value,
      </if>
      <if test="detectionLimit != null" >
        detection_limit,
      </if>
      <if test="quantitationLimit != null" >
        quantitation_limit,
      </if>
      <if test="device != null" >
        device,
      </if>
      <if test="defaultPrice != null" >
        default_price,
      </if>
      <if test="testRoom != null" >
        test_room,
      </if>
      <if test="subpackage != null" >
        subpackage,
      </if>
      <if test="itemResult != null" >
        item_result,
      </if>
      <if test="measuredValue != null" >
        measured_value,
      </if>
      <if test="testUser != null" >
        test_user,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="updatedAt != null" >
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="receiveSampleId != null" >
        #{receiveSampleId,jdbcType=VARCHAR},
      </if>
      <if test="reportId != null" >
        #{reportId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        #{method,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        #{unit,jdbcType=VARCHAR},
      </if>
      <if test="standardValue != null" >
        #{standardValue,jdbcType=VARCHAR},
      </if>
      <if test="detectionLimit != null" >
        #{detectionLimit,jdbcType=VARCHAR},
      </if>
      <if test="quantitationLimit != null" >
        #{quantitationLimit,jdbcType=VARCHAR},
      </if>
      <if test="device != null" >
        #{device,jdbcType=VARCHAR},
      </if>
      <if test="defaultPrice != null" >
        #{defaultPrice,jdbcType=DOUBLE},
      </if>
      <if test="testRoom != null" >
        #{testRoom,jdbcType=VARCHAR},
      </if>
      <if test="subpackage != null" >
        #{subpackage,jdbcType=VARCHAR},
      </if>
      <if test="itemResult != null" >
        #{itemResult,jdbcType=VARCHAR},
      </if>
      <if test="measuredValue != null" >
        #{measuredValue,jdbcType=VARCHAR},
      </if>
      <if test="testUser != null" >
        #{testUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.gzjy.receive.model.ReceiveSampleItem" >
    update receive_sample_item
    <set >
      <if test="receiveSampleId != null" >
        receive_sample_id = #{receiveSampleId,jdbcType=VARCHAR},
      </if>
      <if test="reportId != null" >
        report_id = #{reportId,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="method != null" >
        method = #{method,jdbcType=VARCHAR},
      </if>
      <if test="unit != null" >
        unit = #{unit,jdbcType=VARCHAR},
      </if>
      <if test="standardValue != null" >
        standard_value = #{standardValue,jdbcType=VARCHAR},
      </if>
      <if test="detectionLimit != null" >
        detection_limit = #{detectionLimit,jdbcType=VARCHAR},
      </if>
      <if test="quantitationLimit != null" >
        quantitation_limit = #{quantitationLimit,jdbcType=VARCHAR},
      </if>
      <if test="device != null" >
        device = #{device,jdbcType=VARCHAR},
      </if>
      <if test="defaultPrice != null" >
        default_price = #{defaultPrice,jdbcType=DOUBLE},
      </if>
      <if test="testRoom != null" >
        test_room = #{testRoom,jdbcType=VARCHAR},
      </if>
      <if test="subpackage != null" >
        subpackage = #{subpackage,jdbcType=VARCHAR},
      </if>
      <if test="itemResult != null" >
        item_result = #{itemResult,jdbcType=VARCHAR},
      </if>
      <if test="measuredValue != null" >
        measured_value = #{measuredValue,jdbcType=VARCHAR},
      </if>
      <if test="testUser != null" >
        test_user = #{testUser,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="updatedAt != null" >
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gzjy.receive.model.ReceiveSampleItem" >
    update receive_sample_item
    set receive_sample_id = #{receiveSampleId,jdbcType=VARCHAR},
      report_id = #{reportId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      method = #{method,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      standard_value = #{standardValue,jdbcType=VARCHAR},
      detection_limit = #{detectionLimit,jdbcType=VARCHAR},
      quantitation_limit = #{quantitationLimit,jdbcType=VARCHAR},
      device = #{device,jdbcType=VARCHAR},
      default_price = #{defaultPrice,jdbcType=DOUBLE},
      test_room = #{testRoom,jdbcType=VARCHAR},
      subpackage = #{subpackage,jdbcType=VARCHAR},
      item_result = #{itemResult,jdbcType=VARCHAR},
      measured_value = #{measuredValue,jdbcType=VARCHAR},
      test_user = #{testUser,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=CHAR}
  </update>
</mapper>