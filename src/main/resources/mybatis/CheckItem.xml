<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gzjy.checkitems.mapper.CheckItemMapper">


	<resultMap id="BaseResultMap" type="com.gzjy.checkitems.model.CheckItem">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="method" jdbcType="VARCHAR" property="method" />
		<result column="unit" jdbcType="VARCHAR" property="unit" />
		<result column="standard_value" jdbcType="VARCHAR" property="standardValue" />
		<result column="detection_limit" jdbcType="VARCHAR" property="detectionLimit" />
		<result column="quantitation_limit" jdbcType="VARCHAR"
			property="quantitationLimit" />
		<result column="device" jdbcType="VARCHAR" property="device" />
		<result column="default_price" jdbcType="DOUBLE" property="defaultPrice" />
		<result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
		<result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />		
	</resultMap>

	<sql id="Base_Column_List">
		id, name, method, unit, standard_value, detection_limit,
		quantitation_limit,device, default_price,created_at, updated_at
	</sql>

	<select id="selectAll" resultMap="BaseResultMap">
		<if test="name != null">
			<bind name="namePattern" value="'%' + name + '%'" />
		</if>
		<if test="method != null">
			<bind name="methodPattern" value="'%' + method + '%'" />
		</if>
		select
		<include refid="Base_Column_List" />
		from check_item
		<where>
			<if test="name != null">
				name like #{namePattern}
			</if>
			<if test="method != null">
				and method #{methodPattern}
			</if>
		</where>
		order by created_at desc
	</select>

	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from check_item
		where id = #{id,jdbcType=VARCHAR}
	</select>

	<select id="validateCheckItem" parameterType="com.gzjy.checkitems.model.CheckItem"
		resultType="java.lang.Integer">
		select count(1) from check_item
		<where>
			<if test="name != null">
				name = #{name}
			</if>
			<if test="method != null">
				and method = #{method}
			</if>
			<if test="unit != null">
				and unit = #{unit}
			</if>
			<if test="standardValue != null">
				and standard_value = #{standardValue}
			</if>
			<if test="detectionLimit != null">
				and detection_limit = #{detectionLimit}
			</if>
			<if test="quantitationLimit != null">
				and quantitation_limit = #{quantitationLimit}
			</if>
			<if test="device != null">
				and device = #{device}
			</if>
			<if test="defaultPrice != null">
				and default_price = #{defaultPrice}
			</if>
		</where>
	</select>

	<insert id="insert" parameterType="com.gzjy.checkitems.model.CheckItem">
		insert into check_item(id,
		name, method, unit, standard_value,
		detection_limit,quantitation_limit, device, default_price,created_at,
		updated_at)
		values (
		#{id,jdbcType=VARCHAR},
		#{name,jdbcType=VARCHAR},
		#{method,jdbcType=VARCHAR},
		#{unit,jdbcType=VARCHAR},
		#{standardValue,jdbcType=VARCHAR},
		#{detectionLimit,jdbcType=VARCHAR},
		#{quantitationLimit,jdbcType=VARCHAR},
		#{device,jdbcType=VARCHAR},
		#{defaultPrice,jdbcType=DOUBLE},
		#{createdAt,jdbcType=TIMESTAMP},
		#{updatedAt,jdbcType=TIMESTAMP})
	</insert>


	<insert id="importData" parameterType="java.util.List">
		insert into check_item (id, name, method, unit, standard_value,
		detection_limit,
		quantitation_limit, device, default_price,created_at)
		values
		<foreach collection="list" item="item" index="index"
			separator=",">
			(#{item.id},#{item.name},#{item.method},#{item.unit},#{item.standardValue},
			#{item.detectionLimit},#{item.quantitationLimit},#{item.device},#{item.defaultPrice},
			#{item.createdAt})
		</foreach>
	</insert>


	<update id="updateByPrimaryKeySelective" parameterType="com.gzjy.checkitems.model.CheckItem">
		update check_item
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="method != null">
				method = #{method,jdbcType=VARCHAR},
			</if>
			<if test="unit != null">
				unit = #{unit,jdbcType=VARCHAR},
			</if>
			<if test="standardValue != null">
				standard_value = #{standardValue,jdbcType=VARCHAR},
			</if>
			<if test="detectionLimit != null">
				detection_limit = #{detectionLimit,jdbcType=VARCHAR},
			</if>
			<if test="quantitationLimit != null">
				quantitation_limit =
				#{quantitationLimit,jdbcType=VARCHAR},
			</if>
			<if test="device != null">
				device = #{device,jdbcType=VARCHAR},
			</if>
			<if test="defaultPrice != null">
				default_price = #{defaultPrice,jdbcType=VARCHAR},
			</if>
			<if test="updatedAt != null">
				updated_at = #{updatedAt,jdbcType=VARCHAR},
			</if>			
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		check_item
		where id = #{id,jdbcType=VARCHAR}
	</delete>

	<select id="selectDistinctIds" resultType="string">
		SELECT max(id)	FROM check_item GROUP BY name,method,unit,standard_value,detection_limit,
		quantitation_limit, device, default_price
	</select>

	<delete id="deleteByIds">
		delete from	check_item	where id not in 
		<foreach item="item" index="index" collection="idList" open="(" separator="," close=")">
		  	#{item}
		</foreach>  
	</delete>

</mapper>